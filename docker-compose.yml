version: "3.9"

services:
  eureka-server:
    container_name: eureka-server
    restart: always
    build: ./eureka-server/
    image: eureka-server
    ports:
      - "8081:8081"
    networks:
      - eureka-network

  api-gateway:
    container_name: api-gateway
    restart: always
    build: ./api-gateway/
    image: api-gateway
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
    networks:
      - eureka-network

  points-service:
    container_name: points-service
    restart: always
    build: ./points-service/
    image: points-service
    depends_on:
      - eureka-server
      - api-gateway
      - postgres-db
    networks:
      - eureka-network
      - postgres

  auth-service:
    container_name: auth-service
    restart: always
    build: ./auth-service/
    image: auth-service
    depends_on:
      - eureka-server
      - api-gateway
      - postgres-db
    networks:
      - eureka-network
      - postgres

  postgres-db:
    image: postgres:15.5
    container_name: postgres-db
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=db
    volumes:
      - postgres-db-data:/var/lib/postgresql/data
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:7.6
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@root.com
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgAdmin
    networks:
      - postgres

networks:
  postgres:
    driver: bridge
  eureka-network:
    driver: bridge

volumes:
  postgres-db-data:
  pgadmin-data:

